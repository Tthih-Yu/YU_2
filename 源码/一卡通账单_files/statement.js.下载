define(function(require, exports, module) {

    var utils = require('utils');
    var bs = require('./statementBs');
    //原始功能，未单独处理
	/*
	var statement = require('./statement/statement');
	var detail = require('./detail/detail');
	var report = require('./report/report');
	*/
	//加载其它组件
	var charge = require('./charge/charge');
    var find = require('./find/find');
	var lost = require('./lost/lost');
	var password = require('./password/password');
	var transfer = require('./transfer/transfer');
	var readme = require('./readme/readme');

    var viewConfig = {
        initialize : function() {
            var self = this;
            var mainView = utils.loadCompiledPage('statement');
            // 异步模式，获得数据
            bs.getSmardCardMainModal().done(function(model) {
                if(model.status !== 200) {
                    $.err("无法获取用户数据, 请尝试刷新浏览器");
                    return false;
                }
                // 模板的渲染
                self.$rootElement.html(mainView.render(model), true);
                
                self.pushSubView([password, charge, readme]);
                
                // 初始化select
                //$("#statementYMSelect").jqxDropDownList({ source: model.yearMonths, selectedIndex: 0, width: '100'});
                self.initMenu(model);
                bs.drawStatementChart();
                //bs.drawStatementChartSY();
            });
            // 此页面的事件需要绑定在当前页面  否则会将当前页面js代入指代词this中 显得怪异
            this.eventMap = {
            		
                "#showRanking" : this.showRanking,
                
                "#statementYMSelect@change": this.consumeBillYMChangeAction
                
                
    			
            };
        },
        // 初始化菜单
        initMenu : function(model) {
            var _source = window.source;
            $("#menu").bhMenu({
                source : _source,
                contentContainer : $("#menuContent")
            }).on("activeChange", function(menuId, text, title, $menuItem) {
                switch (text) {
                    case "statement":
                        $("#statementYMSelect option:first").prop("selected", true);
                        bs.drawStatementChart();
                        break;
                    case "detail":
                        bs.initAdvancedQueryAndTable();
                        break;
                    case "report":
                        bs.drawReportChart();
                        break;
                     case "lost":
                    	 // var html = $('#lostDiv');
                         // lost.initialize(html);
                    	 lost.initLost(model.cardnum);
                         break;
                    case "find":
                    	// var html = $('#findDiv');
                        // find.initialize(html);
                    	find.initFind(model.cardnum);
                        break;
                    case "transfer":
                    	var html = $('#transferDiv');
                        transfer.initialize(html);
                        break;
                    case "password":
                        // bs.drawReportChart();
                        var html = $('#passwordDiv');
                        password.initialize(html, model.cardnum);
                        break;	
					case "charge":
						var html = $('#chargeDiv');
                        charge.initialize(html);
                        break;	
					case "readme":
						var html = $('#readmeDiv');
                        readme.initialize(html);
                        break;			
                    default:
                        break;
                }
            });
        },

        // 下拉的月份变动时候 账单事件
        consumeBillYMChangeAction : function(e) {
            // eventMap传递过来的事件 this指代的是 eventMap所在的js
            bs.drawStatementChart($(e.currentTarget).val());
        },
        
        showRanking:function(){
            var dialogRanking = Hogan.compile($("#dialogRanking").html().replace(/{\\{/g, "{{").replace(/}\\}/g, "}}"));
            var content = dialogRanking.render({
                schoolPercent:"90%",
                kinPercent:"75%"
            });

            BH_UTILS.bhWindow(content,"",[{text:"关闭",className:'bh-btn-primary',callback:function(){}}],{width:800,height:588}, function(){

            });
        }
    };
    return viewConfig;
});
