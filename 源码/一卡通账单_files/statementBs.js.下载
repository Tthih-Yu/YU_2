define(function(require, exports, module) {

    var utils = require('utils');

    var bs = {
        api: {
            smartCardMainUrl: basePath + "/mySmartCard/loadSmartCardBillMain.do",
            currentMonthBillUrl: basePath + "/mySmartCard/getCurrentMonthBill.do",
            getConsumerTrendsUrl: basePath + "/mySmartCard/getConsumerTrendsData.do",
            billDetailModel: "modepage/smartCardBill.do",
            billDetailTable: "mySmartCard/getBillDetail.do",
            billDetailAction: 'consumeDetail'
        },
        // 获取一卡通信息
        getSmardCardMainModal: function(){
            return this._commonSimpleAjax(this.api.smartCardMainUrl);
        },
        // 得到当前月份账单消费信息
        getCurrentMonthBillModel: function(ym){
            return this._commonSimpleAjax(this.api.currentMonthBillUrl, {yearMonth: ym});
        },
        // 得到当前月份账单信息
        getConsumerTrendsModel: function(){
            return this._commonSimpleAjax(this.api.getConsumerTrendsUrl);
        },
        // 通用的ajax事件
        _commonSimpleAjax: function(url, options){
            var def = $.Deferred();
            utils.doAjax(url, options || {}).done(function(data) {
                def.resolve(data);
            }).fail(function(res) {
                def.reject(res);
            });
            return def.promise();
        },
        // 缓存当前请求时候 带入的日期和类型选择
        _searchCache: {
            date: null,
            consumeType: null
        },
        // 账单详细表格
        initAdvancedQueryAndTable : function() {
            var self = this;
            // 每次点击重新初始化 页面数据 不取缓存  <-- 重要
            $('#advancedQueryPlaceholder').removeData();
            $('#scholarshipManageTable').removeData();
            var tableOptions = {
                pagePath : this.api.billDetailModel,
                action : this.api.billDetailAction,
                url: this.api.billDetailTable,
                sortable : true,
                columnsResize : false
            };
            var tableHeight = BH_UTILS.getTableHeight(10); //固定10行的高度
            tableOptions.height = tableHeight;
            // 检查当前搜索是否存在 如果存在 则不需要再次请求搜索元数据
            var searchData =  WIS_EMAP_SERV.getModel( this.api.billDetailModel, this.api.billDetailAction,
            "search");
            $('#advancedQueryPlaceholder').emapAdvancedQuery({
                data : searchData || [],
                allowAllOption : false,
                initComplete: function() {
                    // 渲染焦点
                    var date = self._searchCache.date;
                    var consumeType = self._searchCache.consumeType;
                    var consumeJYLX = self._searchCache.consumeJYLX;
                    if(date) {
                        $("div[data-name='date'] div[data-id='" + date + "']").addClass("bh-active");
                    } else {
                        $("div[data-name='date'] div[data-id]:first").addClass("bh-active");
                    }
                    if(consumeType) {
                        $("div[data-name='consumeType'] div[data-id]").each(function(){
                            if($.trim($(this).text()) === consumeType) {
                                consumeType = $(this).attr("data-id");
                                $(this).addClass("bh-active");
                            }
                        });
                    } else {
                        $("div[data-name='consumeType'] div[data-id]:first").addClass("bh-active");
                    }
                    // 查询模块完成加载后 看是否有当前的缓存查询 有的话 从此处加载
                    var querySetting = "[";
                    if(date) {
                        querySetting += '{ name: "date", value: ' + date + '},';
                    }
                    if(consumeType) {
                        querySetting += '{ name: "consumeType", value: ' + consumeType + '}';
                    }

                    querySetting += ']';
                    if(querySetting !== '[]') {
                        tableOptions.params = {
                            querySetting: querySetting
                        };
                    }
                    //等待搜索初始化完成再绘出table
                    $('#scholarshipManageTable').emapdatatable(tableOptions);
                    // 表格初始化完毕 清空缓存的搜索对象
                    self._searchCache.date = null;
                    self._searchCache.consumeType = null;
                    self._searchCache.consumeJYLX = null;
                }
            });
            // 切换页面时候需要解绑定之前的事件否则会多次监听    
            $('#advancedQueryPlaceholder').off("search").on("search",
                    function(e, data, opts) {
                if (!data) {
                    data = $(this).emapAdvancedQuery(true).getValue();
                }
                data = JSON.parse(data);
                $('#scholarshipManageTable').emapdatatable('reload', {
                    querySetting : JSON.stringify(data)
                }, true);
            });
        },
        // 当月消费账单图
        drawStatementChart : function(ym) {
            var self = this;
            $('#chart_statement-div').empty();
            var $obj = $('#chart_statement-div')[0];
            self.getCurrentMonthBillModel(ym || $("#statementYMSelect").val()).done(function(billDetail) {
                if(billDetail.status !== 200) {
                    $.err("暂无当月数据,请尝试刷新浏览器");
                    return false;
                }
                if(billDetail.data && billDetail.data.length !== 0) {
                    var option = {
                        title : {
                            text : '支出合计：' + billDetail.totalAmount+' 收入合计：'+billDetail.inAmount,
                            x : 'center',
                            y : 'bottom'
                        },
                        tooltip : {
                            trigger : 'item',
                            formatter : "{b} : {c} ({d}%)"
                        },
                        legend : {
                            orient : 'vertical',
                            x : 'right',
                            data : billDetail.legend
                        },
                        color: billDetail.serisColor,
                        series : [ {
                            name : '账单',
                            label: {
                                normal: {
                                    formatter: "{b} : {c}",
                                    textStyle: {
                                        color: "#000"
                                    }
                                }
                            },
                            labelLine: {
                                normal: {
                                    lineStyle: {
                                        color: "#000",
                                        width: 1
                                    }
                                }
                            },
                            type : 'pie',
                            radius : '55%',
                            center : [ '50%', '50%' ],
                            data : billDetail.data
                        } ]
                    };
                    utils.getEcharts().done(function(ec) {
                        var myChart = ec.init($obj);
                        myChart.setOption(option);
                        myChart.on("click", function(param) {
                            // 点击触发前  将页面缓存的table对象清空 以便获取到新的对象 而非单例
                            self._searchCache.date = $("#statementYMSelect").val();
                            self._searchCache.consumeType = param.name;
                            $("#menu div[menuid='detail']").trigger("click");
                            
                        });
                    });
                } else {
                    $($obj).html($("#noDataDisplay").html());
                }
            });
        },
        // 消费趋势图
        drawReportChart: function() {
            $('#chart_report-div').empty();
            var $obj = $('#chart_report-div')[0];
            this.getConsumerTrendsModel().done(function(model){
                if(model.status !== 200) {
                    $.err("加载数据失败,请尝试刷新浏览器");
                    return false;
                }
                if(model.serisData && model.serisData.length !== 0) {
                    var option = {
                            tooltip: {
                                trigger: 'item',
                                formatter : "{b} : {c}"
                            },
                            xAxis: [{
                                type: 'category',
                                boundaryGap: false,
                                name: '日期',
                                data: model.days,
                                splitLine: {
                                    show: false
                                }
                            }],
                            yAxis: [{
                                type: 'value',
                                name: '金额',
                                splitLine: {
                                    show: true
                                },
                                splitNumber: 10
                            }],
                            color: ["#855CFA"],
                            series: [{
                                name: '金额',
                                type: 'line',
                                symbol:'emptyCircle',
                                symbolSize: 8,
                                showAllSymbol: true,
                                data: model.serisData,
                                itemStyle: {
                                    normal: {
                                        areaStyle: {
                                            type: 'default',
                                            opacity: 0.1
                                        }
                                    }
                                },
                                lineStyle: {
                                    normal: {
                                        width: 1
                                    }
                                }
                            }]
                    };
                    
                    utils.getEcharts().done(function(ec) {
                        var myChart = ec.init($obj);
                        myChart.setOption(option);
                    });
                } else {
                    $($obj).html($("#noDataDisplay").html());
                }
            });
        }
    };

    return bs;
});